apply plugin: 'com.android.library'
apply plugin: 'digital.wup.android-maven-publish'

android {
    // http://tools.android.com/tech-docs/new-build-system/tips
    //noinspection GroovyAssignabilityCheck
    compileSdkVersion rootProject.ext.compileSdkVersion
    //noinspection GroovyAssignabilityCheck
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion rootProject.ext.targetSdkVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets.main {
        jniLibs.srcDirs 'src/main/libs'
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
    }
}

def snapshot = !project.hasProperty('release') // don't forget to change the version name for release (if required)
group = 'com.smartmobilelabs.evo.android.playersdk'
version = snapshot ? "$rootProject.ext.versionName-sml$rootProject.ext.smlVersionName-SNAPSHOT"
        : "$rootProject.ext.versionName-sml$rootProject.ext.smlVersionName"

publishing {
    repositories {
        maven {
//            url snapshot ? "$rootProject.buildDir/repo/snapshots" : "$rootProject.buildDir/repo/releases"
            url snapshot ? SmlNexusSnapshotRepo : SmlNexusReleaseRepo
            credentials {
                username SmlNexusUser
                password SmlNexusPw
            }
        }
    }
    publications {
        mavenAar(MavenPublication) {
            from components.android
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

//apply from: new File(rootProject.projectDir, "tools/gradle-on-demand.gradle");
